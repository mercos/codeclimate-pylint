#!/usr/bin/env python

import glob, json, os.path, sys

from pylint.lint import Run
from reporter import CodeClimateReporter

try:
    with open('/config.json') as config_file:
        config = json.loads(config_file.read())
except IOError:
    config = {}

include_paths = config.get('include_paths', ['./'])
exclude_paths = config.get('exclude_paths', [])
plugins_config = config.get('plugins', [])

additional_python_path = config.get('PYTHONPATH', [])
if isinstance(additional_python_path, str):
    additional_python_path = [additional_python_path]
sys.path.extend(map(lambda x: os.path.abspath(x), additional_python_path))
print("Running pylint using PYTHONPATH: " + (":".join(sys.path)), file=sys.stderr)


def process_python_files_in_paths(paths, process):
    for path in paths:
        if path.endswith('.py'):
            process(path)
        if path.endswith('/'):
            subpaths = glob.glob(path + "*.py") + glob.glob(path + "*/**/*.py", recursive=True)
            for subpath in subpaths:
                process(subpath)


def add_path(path):
    files.append(path)


def remove_path(path):
    if path in files:
        files.remove(path)


files = []
process_python_files_in_paths(include_paths, add_path)
process_python_files_in_paths(exclude_paths, remove_path)

if files:
    if plugins_config:
        plugin_names = map(lambda plugin: 'pylint_{}'.format(plugin), plugins_config)
        files.append('--load-plugins=' + ','.join(plugin_names))
    Run(files, reporter=CodeClimateReporter(), do_exit=False)
